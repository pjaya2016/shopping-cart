{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let RecaptchaDirective = /*#__PURE__*/(() => {\n  class RecaptchaDirective {\n    constructor(elementRef, ngZone, dom) {\n      this.elementRef = elementRef;\n      this.ngZone = ngZone;\n      this.dom = dom;\n      this.recaptchaSuccess = new EventEmitter();\n      this.recaptchaExpired = new EventEmitter();\n      this.recaptchaError = new EventEmitter();\n      this.scriptId = 'recaptcha-script';\n      this.widgetId = 0;\n    }\n\n    ngOnInit() {\n      this.registerCaptchaCallback();\n      this.addScript();\n    }\n\n    ngOnDestroy() {\n      this.widgetId = 0;\n    }\n\n    registerCaptchaCallback() {\n      window.recaptchaCallback = () => {\n        const config = {\n          sitekey: '6LcxSWEdAAAAAHVxApaQFaPRl1NKcXtq3MQUaDkB',\n          callback: this.onSuccessCallback.bind(this),\n          'error-callback': this.onErrorCallback.bind(this),\n          'expired-callback': this.onExpiredCallback.bind(this)\n        };\n        this.widgetId = this.renderCaptcha(config);\n      };\n    }\n\n    renderCaptcha(config) {\n      return window.grecaptcha.render(this.elementRef.nativeElement, config);\n    }\n\n    addScript() {\n      if (this.dom.getElementById(this.scriptId) != null) {\n        return;\n      }\n\n      const script = this.dom.createElement('script');\n      script.src = 'https://www.google.com/recaptcha/api.js?onload=recaptchaCallback&render=explicit';\n      script.id = this.scriptId;\n      script.async = true;\n      script.defer = true;\n      this.dom.body.appendChild(script);\n    }\n\n    onSuccessCallback(token) {\n      this.ngZone.run(() => {\n        this.recaptchaSuccess.emit(token);\n      });\n    }\n\n    onErrorCallback() {\n      this.ngZone.run(() => {\n        this.recaptchaError.emit();\n      });\n    }\n\n    onExpiredCallback() {\n      this.ngZone.run(() => {\n        this.recaptchaExpired.emit();\n      });\n    }\n\n  }\n\n  RecaptchaDirective.ɵfac = function RecaptchaDirective_Factory(t) {\n    return new (t || RecaptchaDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  RecaptchaDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: RecaptchaDirective,\n    selectors: [[\"\", \"appRecaptcha\", \"\"]],\n    outputs: {\n      recaptchaSuccess: \"recaptchaSuccess\",\n      recaptchaExpired: \"recaptchaExpired\",\n      recaptchaError: \"recaptchaError\"\n    }\n  });\n  return RecaptchaDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}