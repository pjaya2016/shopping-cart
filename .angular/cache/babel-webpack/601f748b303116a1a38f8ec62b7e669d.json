{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MyProductComponent = class MyProductComponent {\n  constructor(myProductService, messageService, confirmationService, formBuilder) {\n    this.myProductService = myProductService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.formBuilder = formBuilder;\n    this.products = [];\n    this.product = {\n      id: '',\n      createdDate: '',\n      name: '',\n      description: '',\n      rating: 0,\n      price: 0,\n      stocks: 0,\n      productType: '',\n      productImage: []\n    };\n    this.priview = true;\n    this.selectedProducts = [];\n    this.productTypes = [];\n    this.files = [];\n    this.displayGallery = false;\n    this.imageArray = [];\n    this.myFormGroup = this.formBuilder.group(this.product);\n  }\n\n  ngOnInit() {\n    this.getProductTypeLists();\n    this.getAllProducts();\n  }\n\n  uploader(event) {\n    console.log(event.files[0]);\n    this.selectedProducts.forEach(p => {\n      this.myProductService.imageUpload(event.files[0], p.id).subscribe(res => {\n        console.log('Image Uploaded sucessfully');\n        console.log(res);\n        this.getAllProducts();\n      });\n    });\n  }\n\n  deleteImage(imageUrl) {\n    let extratcedId = this.getExtractedId(imageUrl);\n    this.priview = false;\n    console.log(extratcedId);\n    this.myProductService.deleteImage(extratcedId).subscribe(res => {\n      console.log('Deleted Image');\n      this.getAllProducts();\n    }).add(() => {\n      this.priview = true;\n    });\n  }\n\n  getExtractedId(imageUrl) {\n    let imageId = imageUrl.split('/');\n    let extratcedId = Number(imageId[imageId.length - 1]);\n    return extratcedId;\n  }\n\n  getAllProducts() {\n    this.myProductService.getProducts().subscribe(res => {\n      console.log(res);\n      this.products = res;\n    });\n  }\n\n  deleteSelectedProducts() {\n    console.log(this.selectedProducts);\n    this.selectedProducts.forEach(p => {\n      this.myProductService.deleteProduct(Number(p.id)).subscribe(res => {\n        console.log('Product Deleted');\n        this.getAllProducts();\n      });\n    });\n  }\n\n  editProduct(product) {\n    this.product = Object.assign({}, product);\n    this.productDialog = true;\n  }\n\n  hideDialog() {\n    this.productDialog = false;\n    this.submitted = false;\n  }\n\n  getProductTypeLists() {\n    this.myProductService.getProductType().subscribe(res => {\n      this.productTypes = res;\n    });\n  }\n\n  saveProduct() {\n    this.submitted = true;\n    console.log(this.myFormGroup);\n    let product = this.myFormGroup.value;\n    this.myProductService.saveProduct(product).subscribe(res => {\n      this.getAllProducts();\n    });\n    this.productDialog = false;\n    this.product = {};\n  }\n\n  openNew() {\n    this.product = {};\n    this.submitted = false;\n    this.productDialog = true;\n  }\n\n  expandGallery(id) {\n    let filteredProduct = this.products.filter(p => Number(p.id) === id);\n\n    if (filteredProduct.length > 0) {\n      this.product = filteredProduct[0];\n      this.imageArray = this.product.productImage;\n    }\n\n    this.priview = false;\n    this.displayGallery = true;\n  }\n\n  closeGallery() {\n    this.priview = true;\n  }\n\n};\nMyProductComponent = __decorate([Component({\n  selector: 'app-my-product',\n  templateUrl: './my-product.component.html',\n  styleUrls: ['./my-product.component.css']\n})], MyProductComponent);\nexport { MyProductComponent };","map":null,"metadata":{},"sourceType":"module"}